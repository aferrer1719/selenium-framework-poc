[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-12-15T03:50:47.637Z",
        "before": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "com.mesaj.app.CucumberSpringContextConfiguration.setup()"
            }
          }
        ],
        "line": 14,
        "name": "client ingresa satisfactoriamente al backoffice",
        "description": "",
        "id": "client-sign-up;client-ingresa-satisfactoriamente-al-backoffice",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterFailingScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20219000000,
              "status": "passed"
            },
            "line": 15,
            "name": "Miguel quiere ingresar al backoffice",
            "match": {
              "location": "com.mesaj.app.stepdefinitions.SignUpStepDefs.ingresar_al_backoffice()"
            },
            "after": [
              {
                "result": {
                  "duration": 3000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterEveryStep(io.cucumber.java.Scenario)"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6811000000,
              "status": "passed"
            },
            "line": 16,
            "name": "el envia la  informacion requerida para ingresar",
            "match": {
              "location": "com.mesaj.app.stepdefinitions.SignUpStepDefs.Enviar_informacion_requerida_para_ingresar()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterEveryStep(io.cucumber.java.Scenario)"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 114000000,
              "status": "passed"
            },
            "line": 17,
            "name": "el puede ingresar correctamente y ver la pantalla principal",
            "match": {
              "location": "com.mesaj.app.stepdefinitions.SignUpStepDefs.ver_Pantalla_Principal()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterEveryStep(io.cucumber.java.Scenario)"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@run"
          }
        ]
      },
      {
        "start_timestamp": "2022-12-15T03:51:15.686Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.mesaj.app.CucumberSpringContextConfiguration.setup()"
            }
          }
        ],
        "line": 19,
        "name": "client sign up failed 2",
        "description": "",
        "id": "client-sign-up;client-sign-up-failed-2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png",
                "name": "5e39ff5e-ff12-4167-8b13-a1005207c085"
              }
            ],
            "result": {
              "duration": 116000000,
              "status": "passed"
            },
            "match": {
              "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterFailingScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11705000000,
              "status": "passed"
            },
            "line": 20,
            "name": "Miguel quiere ingresar al backoffice",
            "match": {
              "location": "com.mesaj.app.stepdefinitions.SignUpStepDefs.ingresar_al_backoffice()"
            },
            "after": [
              {
                "result": {
                  "duration": 3000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterEveryStep(io.cucumber.java.Scenario)"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator \u0027By.xpath: //body/div[@id\u003d\u0027wrapper-mobiApp\u0027]/div[2]/div[2]/div[1]/div[3]\u0027 (tried for 60 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:234)\r\n\tat com.mesaj.app.pageobjects.SignUpServices.pantallaPrincipal(SignUpServices.java:43)\r\n\tat com.mesaj.app.tasks.UserSignUp.withInfo(UserSignUp.java:21)\r\n\tat com.mesaj.app.stepdefinitions.SignUpStepDefs.ingresar_informacion(SignUpStepDefs.java:55)\r\n\tat ✽.el no ingresa la informacion requerida para autenticarse(file:///C:/Users/RYZEN%205/IdeaProjects/selenium-framework-poc/src/test/resources/features/signup.feature:21)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//body/div[@id\u003d\u0027wrapper-mobiApp\u0027]/div[2]/div[2]/div[1]/div[3]\"}\n  (Session info: chrome\u003d108.0.5359.95)\nFor documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element\nBuild info: version: \u00274.0.0-alpha-4\u0027, revision: \u0027c2d955b49e\u0027\nSystem info: host: \u0027ASUS-M509D\u0027, ip: \u0027192.168.21.26\u0027, os.name: \u0027Windows 11\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_351\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.95, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\\Users\\RYZEN5~1\\AppData\\L...}, goog:chromeOptions: {debuggerAddress: localhost:64844}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 8b651b6977c6d5a56f76ceabe3bf767f\n*** Element info: {Using\u003dxpath, value\u003d//body/div[@id\u003d\u0027wrapper-mobiApp\u0027]/div[2]/div[2]/div[1]/div[3]}\r\n\tat sun.reflect.GeneratedConstructorAccessor21.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:394)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)\r\n\tat com.sun.proxy.$Proxy70.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:211)\r\n\tat com.mesaj.app.pageobjects.SignUpServices.pantallaPrincipal(SignUpServices.java:43)\r\n\tat com.mesaj.app.tasks.UserSignUp.withInfo(UserSignUp.java:21)\r\n\tat com.mesaj.app.stepdefinitions.SignUpStepDefs.ingresar_informacion(SignUpStepDefs.java:55)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:27)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\r\n",
              "duration": 60547000000,
              "status": "failed"
            },
            "line": 21,
            "name": "el no ingresa la informacion requerida para autenticarse",
            "match": {
              "location": "com.mesaj.app.stepdefinitions.SignUpStepDefs.ingresar_informacion()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterEveryStep(io.cucumber.java.Scenario)"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "el no puede ingresar al backoffice",
            "match": {
              "location": "com.mesaj.app.stepdefinitions.SignUpStepDefs.el_no_puede_ingresar_al_backoffice()"
            },
            "after": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "com.mesaj.app.util.reporting.PhotographerHook.takeScreenshotAfterEveryStep(io.cucumber.java.Scenario)"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Client sign up",
    "description": "",
    "id": "client-sign-up",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/signup.feature",
    "tags": []
  }
]